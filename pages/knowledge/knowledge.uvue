<template>
	<view class="knowledge-container">
		<!-- 顶部状态栏 -->
		<view class="status-bar">
			<text class="app-name">冠智未来写作助手</text>
			<view class="header-icons">
				<text class="icon">⋯</text>
				<text class="icon">⚙️</text>
			</view>
		</view>

		<!-- 用户状态区域 - 登录和升级互斥显示 -->
		<view class="user-status-section">
			<!-- 未登录状态：显示登录按钮 -->
			<view v-if="!isLoggedIn" class="user-status-left">
				<button class="login-btn" @click="goToLogin">登录</button>
			</view>
			
			<!-- 已登录状态：显示用户类型和升级按钮 -->
			<view v-else class="user-status-left">
				<text class="user-type">{{ userInfo.isVip ? 'VIP用户' : '普通用户' }}</text>
				<button v-if="!userInfo.isVip" class="upgrade-btn" @click="goToUpgrade">升级</button>
			</view>
		</view>

		<!-- 推荐横幅 -->
		<view class="recommend-banner" @click="goToDesktop">
			<text class="banner-text">更推荐电脑端使用，功能更强大: www.wsxai.com</text>
		</view>

		<!-- 主要内容 -->
		<scroll-view class="main-content" scroll-y="true">
			<!-- 知识库标题区域 -->
			<view class="knowledge-header">
				<view class="section-title">
					<text class="title-text">
						<text class="title-icon">📚</text>
						知识库<text class="title-desc">AI知识管理，智能检索</text>
					</text>
				</view>
			</view>

			<!-- 操作按钮区域 -->
			<view class="action-buttons">
				<view class="action-btn upload-btn" @click="showDocumentUpload">
					<view class="btn-icon">📄</view>
					<text class="btn-text">文档上传</text>
					<text class="btn-desc">支持多种文档格式</text>
				</view>
				<view class="action-btn capture-btn" @click="showWebCapture">
					<view class="btn-icon">🌐</view>
					<text class="btn-text">网页抓取</text>
					<text class="btn-desc">智能提取网页内容</text>
				</view>
			</view>

			<!-- 知识库内容展示区域 -->
			<view class="knowledge-content">
				<!-- 无数据状态 -->
				<view v-if="knowledgeItems.length === 0" class="empty-state">
					<view class="empty-illustration">
						<view class="desk">
							<view class="laptop"></view>
							<view class="arrow"></view>
							<view class="box"></view>
						</view>
						<view class="person">
							<view class="head"></view>
							<view class="body"></view>
						</view>
					</view>
					<text class="empty-text">无数据</text>
					<text class="empty-desc">上传文档或抓取网页开始构建您的知识库</text>
				</view>

				<!-- 有数据状态 -->
				<view v-else class="knowledge-list">
					<view class="list-header">
						<text class="list-title">我的知识库</text>
						<text class="list-count">({{ knowledgeItems.length }})</text>
					</view>
					<view class="knowledge-items">
						<view v-for="(item, index) in knowledgeItems" :key="index" class="knowledge-item">
							<view class="item-icon">{{ item.icon }}</view>
							<view class="item-content">
								<text class="item-title">{{ item.title }}</text>
								<text class="item-desc">{{ item.desc }}</text>
								<text class="item-time">{{ item.time }}</text>
							</view>
							<view class="item-actions">
								<text class="action-text">查看</text>
							</view>
						</view>
					</view>
				</view>
			</view>
		</scroll-view>

		<!-- 文档上传模态框 -->
		<view class="modal-overlay" v-if="showDocumentModal" @click="hideDocumentModal">
			<view class="modal-content" @click.stop>
				<view class="modal-header">
					<text class="modal-title">文档上传</text>
					<text class="close-btn" @click="hideDocumentModal">×</text>
				</view>
				<view class="modal-body">
					<view class="upload-option" @click="selectFromWeChat">
						<text class="option-text">从微信聊天记录中选择</text>
					</view>
					<view class="upload-option" @click="selectFromDevice">
						<text class="option-text">从设备中选择</text>
					</view>
				</view>
				<view class="modal-footer">
					<view class="cancel-btn" @click="hideDocumentModal">
						<text class="cancel-text">取消</text>
					</view>
				</view>
			</view>
		</view>

		<!-- 网页抓取模态框 -->
		<view class="modal-overlay" v-if="showWebModal" @click="hideWebModal">
			<view class="modal-content web-modal" @click.stop>
				<view class="modal-header">
					<text class="modal-title">网页抓取</text>
					<text class="close-btn" @click="hideWebModal">×</text>
				</view>
				<view class="modal-body">
					<view class="disclaimer">
						<text class="disclaimer-text">请避免非法抓取他人网站的侵权行为，保证链接可公开访问，且网站内容可复制抓取的网页仅为内容固定不变的静态网页，例如新闻文章、产品介绍等</text>
					</view>
					<view class="input-area">
						<textarea 
							class="url-input" 
							placeholder="请粘贴网站或输入链接，一次支持添加1个网址"
							v-model="webUrl"
							:maxlength="500"
						></textarea>
					</view>
				</view>
				<view class="modal-footer">
					<view class="cancel-btn" @click="hideWebModal">
						<text class="cancel-text">取消</text>
					</view>
					<view class="confirm-btn" @click="confirmWebCapture">
						<text class="confirm-text">确认</text>
					</view>
				</view>
			</view>
		</view>
	</view>
</template>

<script>
import auth from '@/utils/auth.js'

export default {
	data() {
		return {
			isLoggedIn: false,
			userInfo: {
				isVip: false,
				nickname: '',
				coins: 0
			},
			showDocumentModal: false,
			showWebModal: false,
			webUrl: '',
			knowledgeItems: [] // 知识库项目列表
		}
	},
	onLoad() {
		this.checkLoginStatus()
	},
	onShow() {
		this.checkLoginStatus()
		
		// 检查是否有登录状态更新
		if (auth.checkAndClearLoginStatusUpdated()) {
			this.checkLoginStatus()
		}
	},
	methods: {
		checkLoginStatus() {
			// 使用全局登录状态管理工具
			const result = auth.checkLoginStatus()
			
			console.log('知识库页面 - 检查登录状态:', result)
			
			if (result.isLoggedIn && result.userInfo) {
				this.isLoggedIn = true
				// 确保用户信息包含必要的字段
				this.userInfo = {
					isVip: result.userInfo.isVip || false,
					nickname: result.userInfo.nickname || '用户',
					coins: result.userInfo.coins || 0,
					...result.userInfo
				}
				console.log('知识库页面 - 用户已登录:', this.userInfo)
			} else {
				this.isLoggedIn = false
				this.userInfo = {
					isVip: false,
					nickname: '',
					coins: 0
				}
				console.log('知识库页面 - 用户未登录')
			}
		},
		
		goToLogin() {
			uni.navigateTo({
				url: '/pages/login/login'
			})
		},
		
		goToUpgrade() {
			uni.navigateTo({
				url: '/pages/profile/upgrade-member/upgrade-member'
			})
		},
		
		goToDesktop() {
			uni.navigateTo({
				url: '/pages/webview/webview?url=' + encodeURIComponent('https://www.wsxai.com/')
			})
		},
		
		// 显示文档上传模态框
		showDocumentUpload() {
			this.showDocumentModal = true;
		},
		
		// 隐藏文档上传模态框
		hideDocumentModal() {
			this.showDocumentModal = false;
		},
		
		// 显示网页抓取模态框
		showWebCapture() {
			this.showWebModal = true;
		},
		
		// 隐藏网页抓取模态框
		hideWebModal() {
			this.showWebModal = false;
			this.webUrl = '';
		},
		
		// 从微信选择文件
		selectFromWeChat() {
			uni.showToast({
				title: '从微信选择功能开发中',
				icon: 'none'
			});
			this.hideDocumentModal();
		},
		
		// 从设备选择文件
		selectFromDevice() {
			uni.chooseFile({
				count: 1,
				type: 'all',
				success: (res) => {
					console.log('选择的文件:', res.tempFiles);
					// 模拟添加到知识库
					this.addToKnowledge({
						icon: '📄',
						title: res.tempFiles[0].name,
						desc: '文档上传',
						time: '刚刚'
					});
					uni.showToast({
						title: '文件已添加到知识库',
						icon: 'success'
					});
					this.hideDocumentModal();
				},
				fail: (err) => {
					console.log('选择文件失败:', err);
					uni.showToast({
						title: '选择文件失败',
						icon: 'none'
					});
				}
			});
		},
		
		// 确认网页抓取
		confirmWebCapture() {
			if (!this.webUrl.trim()) {
				uni.showToast({
					title: '请输入网址',
					icon: 'none'
				});
				return;
			}
			
			uni.showLoading({
				title: '抓取中...'
			});
			
			// 模拟网页抓取
			setTimeout(() => {
				uni.hideLoading();
				// 模拟添加到知识库
				this.addToKnowledge({
					icon: '🌐',
					title: '网页内容',
					desc: '网页抓取',
					time: '刚刚'
				});
				uni.showToast({
					title: '网页已添加到知识库',
					icon: 'success'
				});
				this.hideWebModal();
			}, 2000);
		},
		
		// 添加到知识库
		addToKnowledge(item) {
			this.knowledgeItems.unshift(item);
		}
	}
}
</script>

<style>
.knowledge-container {
	flex: 1;
	background-color: #f8f8f8;
}

/* 顶部状态栏 */
.status-bar {
	display: flex;
	justify-content: space-between;
	align-items: center;
	padding: 20rpx 30rpx;
	background-color: #ffffff;
	border-bottom: 1rpx solid #e0e0e0;
}

.app-name {
	font-size: 32rpx;
	font-weight: 600;
	color: #333333;
}

.header-icons {
	display: flex;
	gap: 20rpx;
}

.icon {
	font-size: 24rpx;
	color: #666666;
	width: 40rpx;
	height: 40rpx;
	display: flex;
	align-items: center;
	justify-content: center;
}

/* 用户状态区域 */
.user-status-section {
	display: flex;
	justify-content: space-between;
	align-items: center;
	padding: 20rpx 30rpx;
	background-color: #ffffff;
	border-bottom: 1rpx solid #e0e0e0;
}

.user-status-left {
	display: flex;
	align-items: center;
	gap: 20rpx;
}

.login-btn {
	background: linear-gradient(90deg, #1976ff, #1565c0);
	color: #ffffff;
	font-size: 28rpx;
	font-weight: 600;
	padding: 12rpx 24rpx;
	border-radius: 12rpx;
	border: none;
}

.user-type {
	font-size: 28rpx;
	color: #333333;
	font-weight: 600;
}

.upgrade-btn {
	background: linear-gradient(90deg, #4CAF50, #388E3C);
	color: #ffffff;
	font-size: 28rpx;
	font-weight: 600;
	padding: 12rpx 24rpx;
	border-radius: 12rpx;
	border: none;
}

/* 推荐横幅 */
.recommend-banner {
	background: linear-gradient(90deg, #e8f5e8 0%, #f0f8f0 100%);
	padding: 16rpx 30rpx;
	text-align: center;
}

.banner-text {
	font-size: 24rpx;
	color: #4CAF50;
}

/* 主要内容 */
.main-content {
	flex: 1;
	padding: 30rpx;
}

/* 知识库标题区域 */
.knowledge-header {
	margin-bottom: 40rpx;
}

.section-title {
	display: flex;
	align-items: center;
	justify-content: space-between;
}

.title-text {
	font-size: 36rpx;
	font-weight: bold;
	color: #333333;
	display: flex;
	align-items: center;
	gap: 12rpx;
}

.title-icon {
	font-size: 32rpx;
}

.title-desc {
	font-size: 24rpx;
	color: #666666;
	font-weight: normal;
	margin-left: 12rpx;
}

/* 操作按钮区域 */
.action-buttons {
	display: flex;
	flex-direction: column;
	gap: 24rpx;
	margin-bottom: 40rpx;
}

.action-btn {
	background: linear-gradient(90deg, #1976ff, #1565c0);
	border-radius: 16rpx;
	padding: 32rpx 24rpx;
	display: flex;
	align-items: center;
	gap: 20rpx;
	box-shadow: 0 4rpx 12rpx rgba(25, 118, 255, 0.15);
}

.btn-icon {
	font-size: 40rpx;
	width: 60rpx;
	height: 60rpx;
	background: rgba(255, 255, 255, 0.2);
	border-radius: 12rpx;
	display: flex;
	align-items: center;
	justify-content: center;
}

.btn-text {
	font-size: 32rpx;
	color: #ffffff;
	font-weight: 600;
	flex: 1;
}

.btn-desc {
	font-size: 24rpx;
	color: rgba(255, 255, 255, 0.8);
}

/* 知识库内容展示区域 */
.knowledge-content {
	background: #ffffff;
	border-radius: 16rpx;
	padding: 30rpx;
	box-shadow: 0 2rpx 8rpx rgba(0, 0, 0, 0.04);
}

/* 空状态 */
.empty-state {
	display: flex;
	flex-direction: column;
	align-items: center;
	padding: 60rpx 0;
}

.empty-illustration {
	position: relative;
	width: 300rpx;
	height: 200rpx;
	margin-bottom: 30rpx;
}

.desk {
	position: absolute;
	left: 50rpx;
	bottom: 30rpx;
	width: 200rpx;
	height: 20rpx;
	background-color: #8d6e63;
	border-radius: 10rpx;
}

.laptop {
	position: absolute;
	left: 50rpx;
	bottom: 40rpx;
	width: 60rpx;
	height: 40rpx;
	background-color: #424242;
	border-radius: 8rpx;
}

.arrow {
	position: absolute;
	left: 120rpx;
	bottom: 50rpx;
	width: 40rpx;
	height: 4rpx;
	background-color: #666666;
	border-radius: 2rpx;
}

.arrow::after {
	content: '';
	position: absolute;
	right: -6rpx;
	top: -4rpx;
	width: 0;
	height: 0;
	border-left: 8rpx solid #666666;
	border-top: 6rpx solid transparent;
	border-bottom: 6rpx solid transparent;
}

.box {
	position: absolute;
	left: 180rpx;
	bottom: 40rpx;
	width: 40rpx;
	height: 30rpx;
	background-color: #e3f2fd;
	border: 2rpx solid #1976ff;
	border-radius: 6rpx;
}

.person {
	position: absolute;
	right: 50rpx;
	bottom: 50rpx;
}

.head {
	width: 30rpx;
	height: 30rpx;
	background-color: #ffb74d;
	border-radius: 50%;
	margin-bottom: 8rpx;
}

.body {
	width: 40rpx;
	height: 50rpx;
	background-color: #90a4ae;
	border-radius: 16rpx;
}

.empty-text {
	font-size: 28rpx;
	color: #999999;
	margin-bottom: 12rpx;
}

.empty-desc {
	font-size: 24rpx;
	color: #bbbbbb;
	text-align: center;
}

/* 知识库列表 */
.knowledge-list {
	display: flex;
	flex-direction: column;
}

.list-header {
	display: flex;
	align-items: center;
	margin-bottom: 20rpx;
}

.list-title {
	font-size: 28rpx;
	font-weight: 600;
	color: #333333;
}

.list-count {
	font-size: 24rpx;
	color: #666666;
	margin-left: 8rpx;
}

.knowledge-items {
	display: flex;
	flex-direction: column;
	gap: 16rpx;
}

.knowledge-item {
	display: flex;
	align-items: center;
	gap: 16rpx;
	padding: 20rpx;
	background: #f8f9fa;
	border-radius: 12rpx;
	border: 1rpx solid #e9ecef;
}

.item-icon {
	font-size: 32rpx;
	width: 50rpx;
	height: 50rpx;
	background: #e3f2fd;
	border-radius: 10rpx;
	display: flex;
	align-items: center;
	justify-content: center;
}

.item-content {
	flex: 1;
	display: flex;
	flex-direction: column;
	gap: 4rpx;
}

.item-title {
	font-size: 26rpx;
	font-weight: 500;
	color: #333333;
}

.item-desc {
	font-size: 22rpx;
	color: #666666;
}

.item-time {
	font-size: 20rpx;
	color: #999999;
}

.item-actions {
	display: flex;
	align-items: center;
}

.action-text {
	font-size: 24rpx;
	color: #1976ff;
	padding: 8rpx 16rpx;
	background: rgba(25, 118, 255, 0.1);
	border-radius: 12rpx;
}

/* 模态框样式 */
.modal-overlay {
	position: fixed;
	top: 0;
	left: 0;
	right: 0;
	bottom: 0;
	background-color: rgba(0, 0, 0, 0.5);
	display: flex;
	align-items: center;
	justify-content: center;
	z-index: 1000;
}

.modal-content {
	background-color: #ffffff;
	border-radius: 20rpx;
	width: 80%;
	max-width: 600rpx;
	max-height: 80vh;
	overflow: hidden;
}

.web-modal {
	width: 90%;
	max-width: 700rpx;
}

.modal-header {
	display: flex;
	justify-content: space-between;
	align-items: center;
	padding: 30rpx;
	border-bottom: 1rpx solid #e0e0e0;
}

.modal-title {
	font-size: 32rpx;
	font-weight: 600;
	color: #333333;
}

.close-btn {
	font-size: 40rpx;
	color: #999999;
	width: 40rpx;
	height: 40rpx;
	display: flex;
	align-items: center;
	justify-content: center;
}

.modal-body {
	padding: 30rpx;
}

.upload-option {
	padding: 30rpx 0;
	border-bottom: 1rpx solid #f0f0f0;
}

.upload-option:last-child {
	border-bottom: none;
}

.option-text {
	font-size: 28rpx;
	color: #333333;
}

.disclaimer {
	margin-bottom: 30rpx;
}

.disclaimer-text {
	font-size: 24rpx;
	color: #666666;
	line-height: 1.6;
}

.input-area {
	margin-bottom: 30rpx;
}

.url-input {
	width: 100%;
	height: 200rpx;
	border: 2rpx solid #e0e0e0;
	border-radius: 12rpx;
	padding: 20rpx;
	font-size: 28rpx;
	color: #333333;
	background-color: #ffffff;
	box-sizing: border-box;
}

.modal-footer {
	display: flex;
	gap: 20rpx;
	padding: 30rpx;
	border-top: 1rpx solid #e0e0e0;
}

.cancel-btn {
	flex: 1;
	border: 2rpx solid #e0e0e0;
	border-radius: 12rpx;
	padding: 20rpx;
	display: flex;
	align-items: center;
	justify-content: center;
}

.cancel-text {
	font-size: 28rpx;
	color: #666666;
}

.confirm-btn {
	flex: 1;
	background: linear-gradient(90deg, #1976ff, #1565c0);
	border-radius: 12rpx;
	padding: 20rpx;
	display: flex;
	align-items: center;
	justify-content: center;
}

.confirm-text {
	font-size: 28rpx;
	color: #ffffff;
	font-weight: 500;
}
</style> 