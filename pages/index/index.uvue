<template>
	<view class="index-container">
		<!-- 顶部状态栏 -->
		<view class="status-bar">
			<text class="app-name">冠智未来写作助手</text>
		</view>

		<!-- 用户状态区域 - 登录和升级互斥显示 -->
		<view class="user-status-section">
			<!-- 未登录状态：显示登录按钮 -->
			<view v-if="!isLoggedIn" class="user-status-left">
				<button class="login-btn" @click="goToLogin">登录</button>
			</view>
			
			<!-- 已登录状态：显示用户类型和升级按钮 -->
			<view v-else class="user-status-left">
				<text class="user-type">{{ userInfo.isVip ? 'VIP用户' : '普通用户' }}</text>
				<button v-if="!userInfo.isVip" class="upgrade-btn" @click="goToUpgrade">升级</button>
			</view>
		</view>
		


		<!-- 推荐横幅 -->
		<view class="recommend-banner" @click="goToDesktop">
			<text class="banner-text">更推荐电脑端使用，功能更强大: www.wsxai.com</text>
		</view>

		<!-- 主要内容 -->
		<scroll-view class="main-content" scroll-y="true">
			<!-- 热门创作模块 -->
			<view class="hot-creation-section">
				<view class="section-header">
					<view class="section-title">
						<text class="title-text">
							<text class="title-icon">👍</text>
						热门创作<text class="title-desc">AI原创，无版权风险</text>
						
					<text class="more-link" @click="goToMore">更多</text>  
				</text>

					</view>
				</view>
			</view>

			<!-- 创作工具网格 -->
			<view class="creation-grid">
				<view class="grid-item" @click="goToPaperAssistant">
					<view class="item-icon paper-icon">W</view>
					<text class="item-title">论文助手</text>
					<text class="item-desc">基于专业知识库的AI论文专家</text>
					<view class="item-tag">长文</view>
				</view>
				
				<view class="grid-item" @click="goToPPT">
					<view class="item-icon ppt-icon">P</view>
					<text class="item-title">PPT</text>
					<text class="item-desc">一键快速生成，轻松搞定PPT</text>
					<view class="item-tag">长文</view>
				</view>
				
				<view class="grid-item" @click="goToExperience">
					<view class="item-icon experience-icon">📄</view>
					<text class="item-title">心得体会</text>
					<text class="item-desc">任何心得体会，都能上价值！</text>
					<view class="item-tag">长文</view>
				</view>
				
				<view class="grid-item" @click="goToSpeech">
					<view class="item-icon speech-icon">🎤</view>
					<text class="item-title">演讲稿</text>
					<text class="item-desc">各类用途、风格演讲稿快速生成！</text>
					<view class="item-tag">长文</view>
				</view>
			</view>

			<!-- 空白区域 -->
			<view class="blank-section"></view>
		</scroll-view>

		<!-- 底部AI对话区域 -->
		<view class="ai-chat-section">
			<!-- 选项栏 -->
			<view class="chat-options">
				<view class="option-item" @click="toggleOption('deepThinking')">
					<view class="option-circle" :class="{ active: options.deepThinking }">
						<text v-if="options.deepThinking" class="option-check">✓</text>
					</view>
					<text class="option-text">深度思考(R1)</text>
				</view>
				<view class="option-item" @click="toggleOption('networkQuery')">
					<view class="option-circle" :class="{ active: options.networkQuery }">
						<text v-if="options.networkQuery" class="option-check">✓</text>
					</view>
					<text class="option-text">联网提问</text>
				</view>
				<view class="option-item" @click="toggleOption('knowledgeQuery')">
					<view class="option-circle" :class="{ active: options.knowledgeQuery }">
						<text v-if="options.knowledgeQuery" class="option-check">✓</text>
					</view>
					<text class="option-text">知识库提问</text>
				</view>
				<text class="history-link" @click="goToHistory">提问记录</text>
			</view>

			<!-- AI对话输入窗口 -->
			<view class="chat-input-window">
				<input 
					class="chat-input" 
					v-model="questionText" 
					placeholder="想了解什么知识,快来问问"
					@confirm="sendQuestion"
				/> 
				<view class="input-controls">
					<text class="image-icon" @click="uploadImage">上传图片</text>
					<text class="send-icon" @click="sendQuestion">发送</text>
				</view>
			</view>
		</view>
	</view>
</template>

<script>
import auth from '@/utils/auth.js'

export default {
	data() {
		return {
			isLoggedIn: false, // 登录状态
			userInfo: {
				isVip: false,
				nickname: '',
				coins: 0
			},
			options: {
				deepThinking: true,
				networkQuery: true,
				knowledgeQuery: true
			},
			questionText: ''
		}
	},
	onLoad() {
		this.checkLoginStatus()
	},
	onShow() {
		this.checkLoginStatus()
		
		// 检查是否有登录状态更新
		if (auth.checkAndClearLoginStatusUpdated()) {
			this.checkLoginStatus()
		}
	},
	methods: {
			checkLoginStatus() {
		// 使用全局登录状态管理工具
		const result = auth.checkLoginStatus()
		
		if (result.isLoggedIn) {
			this.isLoggedIn = true
			this.userInfo = { ...this.userInfo, ...result.userInfo }
		} else {
			this.isLoggedIn = false
			this.userInfo = {
				isVip: false,
				nickname: '',
				coins: 0
			}
		}
	},
	
	clearLoginData() {
		// 使用全局登录状态管理工具清除数据
		auth.clearLoginData()
		
		this.isLoggedIn = false
		this.userInfo = {
			isVip: false,
			nickname: '',
			coins: 0
		}
	},
		
		loadUserData() {
			// 从本地存储加载用户信息（仅在需要时调用）
			const savedUserInfo = uni.getStorageSync('userInfo')
			if (savedUserInfo) {
				this.userInfo = { ...this.userInfo, ...savedUserInfo }
			}
		},
		
		goToLogin() {
			uni.navigateTo({
				url: '/pages/login/login'
			})
		},
		
		goToUpgrade() {
			uni.navigateTo({
				url: '/pages/profile/upgrade-member/upgrade-member'
			})
		},
		
		goToDesktop() {
			uni.navigateTo({
				url: '/pages/webview/webview?url=' + encodeURIComponent('https://www.wsxai.com/')
			})
		},
		
		goToMore() {
			uni.navigateTo({
				url: '/pages/creation/creation'
			})
		},
		
		goToPaperAssistant() {
			// 根据PRD，论文助手可以直接从首页进入
			uni.navigateTo({
				url: '/pages/creation/paper-assistant/paper-assistant'
			})
		},
		
		goToPPT() {
			uni.navigateTo({
				url: '/pages/creation/ppt/ppt'
			})
		},
		
		goToExperience() {
			uni.navigateTo({
				url: '/pages/creation/experience/experience'
			})
		},
		
		goToSpeech() {
			uni.navigateTo({
				url: '/pages/creation/speech/speech'
			})
		},
		
		toggleOption(option) {
			this.options[option] = !this.options[option]
		},
		
		goToHistory() {
			uni.navigateTo({
				url: '/pages/qa/history/history'
			})
		},
		
		startVoiceInput() {
			uni.showToast({
				title: '语音输入功能开发中',
				icon: 'none'
			})
		},
		
		uploadImage() {
			// 显示选择来源的操作菜单
			uni.showActionSheet({
				itemList: ['从相册选择', '拍照'],
				success: (res) => {
					let sourceType: string[] = []
					if (res.tapIndex === 0) {
						// 从相册选择
						sourceType = ['album']
					} else if (res.tapIndex === 1) {
						// 拍照
						sourceType = ['camera']
					}
					
					// 打开图片选择器
					uni.chooseImage({
						count: 1,
						sizeType: ['compressed'],
						sourceType: sourceType,
						success: (res) => {
							uni.showToast({
								title: '图片已选择',
								icon: 'success'
							})
							// 这里可以添加图片处理逻辑
							// 比如上传到服务器或进行AI识别
						},
						fail: (err) => {
							uni.showToast({
								title: '选择图片失败',
								icon: 'none'
							})
						}
					})
				}
			})
		},
		
		sendQuestion() {
			if (!this.questionText.trim()) {
				uni.showToast({
					title: '请输入问题',
					icon: 'none'
				})
				return
			}
			
			uni.showLoading({
				title: '思考中...'
			})
			
			// 模拟AI回答
			setTimeout(() => {
				uni.hideLoading()
				uni.showToast({
					title: 'AI回答功能开发中',
					icon: 'none'
				})
				this.questionText = ''
			}, 2000)
		}
	}
}
</script>

<style>
.index-container {
	flex: 1;
	background-color: #ffffff;
}

/* 顶部状态栏 */
.status-bar {
	display: flex;
	justify-content: flex-start;
	align-items: center;
	padding: 20rpx 30rpx;
	border-bottom: 1rpx solid #f0f0f0;
	gap: 20rpx;
}

.login-btn {
	background-color: #007aff;
	color: #ffffff;
	border: none;
	border-radius: 6rpx;
	padding: 8rpx 16rpx;
	font-size: 24rpx;
}

.app-name {
	font-size: 28rpx;
	font-weight: 600;
	color: #000000;
}

/* 用户状态区域 */
.user-status-section {
	display: flex;
	justify-content: flex-start;
	align-items: center;
	padding: 20rpx 30rpx;
}

.user-status-left {
	display: flex;
	align-items: center;
	gap: 15rpx;
	width: 100%;
}

.user-type {
	font-size: 26rpx;
	color: #666666;
}

.upgrade-btn {
	background-color: #007aff;
	color: #ffffff;
	border: none;
	border-radius: 6rpx;
	padding: 8rpx 16rpx;
	font-size: 22rpx;
}

/* 推荐横幅 */
.recommend-banner {
	display: flex;
	justify-content: center;
	align-items: center;
	background-color: #e8f5e8;
	padding: 20rpx 30rpx;
	margin: 0 30rpx 30rpx 30rpx;
	border-radius: 12rpx;
}

.banner-text {
	font-size: 24rpx;
	color: #2d5a2d;
}

/* 主要内容 */
.main-content {
	flex: 1;
	padding: 0 30rpx;
}

/* 热门创作模块 */
.hot-creation-section {
	margin-bottom: 40rpx;
}

.section-header {
	display: flex;
	justify-content: space-between;
	align-items: center;
	margin-bottom: 20rpx;
}

.section-title {
	display: flex;
	align-items: center;
	gap: 10rpx;
}

.title-icon {
	font-size: 28rpx;
}

.title-text {
	font-size: 30rpx;
	font-weight: 600;
	color: #000000;
}

.title-desc {
	font-size: 22rpx;
	color: #666666;
}

.more-link {
	font-size: 26rpx;
	color: #007aff;
	white-space: nowrap;
}

/* 创作工具网格 */
.creation-grid {
	display: grid;
	grid-template-columns: 1fr 1fr;
	gap: 20rpx;
	margin-bottom: 40rpx;
}

.grid-item {
	background-color: #ffffff;
	border: 1rpx solid #e0e0e0;
	border-radius: 16rpx;
	padding: 30rpx;
	position: relative;
	display: flex;
	flex-direction: column;
	align-items: center;
	text-align: center;
}

.item-icon {
	width: 80rpx;
	height: 80rpx;
	border-radius: 12rpx;
	display: flex;
	align-items: center;
	justify-content: center;
	font-size: 36rpx;
	font-weight: 600;
	color: #ffffff;
	margin-bottom: 20rpx;
}

.paper-icon {
	background-color: #007aff;
}

.ppt-icon {
	background-color: #ff9500;
}

.experience-icon {
	background-color: #00c851;
}

.speech-icon {
	background-color: #ffcc00;
}

.item-title {
	font-size: 28rpx;
	font-weight: 600;
	color: #000000;
	margin-bottom: 10rpx;
}

.item-desc {
	font-size: 22rpx;
	color: #666666;
	line-height: 1.4;
	margin-bottom: 15rpx;
}

.item-tag {
	position: absolute;
	top: 15rpx;
	right: 15rpx;
	background-color: #e3f2fd;
	color: #007aff;
	font-size: 20rpx;
	padding: 4rpx 8rpx;
	border-radius: 4rpx;
}

/* 空白区域 */
.blank-section {
	height: 200rpx;
}

/* 底部AI对话区域 - 优化宽度确保一行显示 */
.ai-chat-section {
	background-color: #ffffff;
	border-top: 1rpx solid #e0e0e0;
	padding: 8rpx 12rpx;
	width: 100%;
	box-sizing: border-box;
}

.chat-options {
	display: flex;
	align-items: center;
	gap: 6rpx;
	margin-bottom: 8rpx;
	flex-wrap: nowrap;
	overflow-x: auto;
	min-height: 28rpx;
	width: 100%;
}

.option-item {
	display: flex;
	align-items: center;
	gap: 2rpx;
	white-space: nowrap;
	flex-shrink: 0;
}

.option-circle {
	width: 14rpx;
	height: 14rpx;
	border-radius: 50%;
	border: 1rpx solid #e0e0e0;
	background-color: #ffffff;
	display: flex;
	align-items: center;
	justify-content: center;
	flex-shrink: 0;
}

.option-circle.active {
	background-color: #007aff;
	border-color: #007aff;
}

.option-check {
	font-size: 8rpx;
	color: #ffffff;
}

.option-text {
	font-size: 14rpx;
	color: #666666;
	white-space: nowrap;
}

.history-link {
	font-size: 14rpx;
	color: #007aff;
	margin-left: auto;
	white-space: nowrap;
	flex-shrink: 0;
}

.chat-input-window {
	display: flex;
	align-items: center;
	background-color: #f8f8f8;
	border-radius: 8rpx;
	padding: 6rpx;
	gap: 6rpx;
	min-height: 36rpx;
	width: 100%;
	box-sizing: border-box;
}

.voice-icon {
	font-size: 16rpx;
	color: #666666;
}

.chat-input {
	flex: 1;
	font-size: 18rpx;
	color: #000000;
	background-color: transparent;
	min-width: 0;
	max-width: 60%;
}

.chat-input::placeholder {
	color: #999999;
}

.input-controls {
	display: flex;
	flex-direction: row;
	gap: 8rpx;
	align-items: center;
	white-space: nowrap;
	flex-shrink: 0;
}

.image-icon {
	font-size: 16rpx;
	color: #007aff;
	white-space: nowrap;
}

.send-icon {
	font-size: 16rpx;
	color: #007aff;
	white-space: nowrap;
}
</style>
