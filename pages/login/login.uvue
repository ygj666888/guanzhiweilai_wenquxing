<template>
  <view class="login-container">
    <view class="header">
      <text class="header-title">登录</text>
    </view>
    <view class="main-content">
      <!-- 品牌区 -->
      <view class="app-info">
        <view class="app-icon">
          <view class="icon-gradient">
            <text class="robot-head">🤖<view class="lightbulb">in</view></text>
          </view>
        </view>
        <text class="app-name">我的AI知识助手</text>
      </view>
      <!-- 功能点分组 -->
      <view class="features">
        <view class="feature-item">
          <text class="feature-icon">🔍          <text class="feature-text">检索提问</text>
		</text>
        </view>
        <view class="feature-item">
          <text class="feature-icon">✏️          <text class="feature-text">一键创作</text>
		</text>
        </view>
        <view class="feature-item">
          <text class="feature-icon">📚          <text class="feature-text">个人知识库</text>
		</text>
        </view>
      </view>
      <!-- 微信一键登录按钮 -->
      <button class="login-btn" @click="wechatLogin">微信一键登录</button>
      <!-- 手机号登录小字按钮 -->
      <text class="phone-login-link" @click="goToPhoneLogin">手机号登录</text>
      <view class="tips">未注册手机号验证后自动创建账号</view>
    </view>
  </view>
</template>

<script>
export default {
  methods: {
    wechatLogin() {
      // 本地微信登录模拟
      const mockUserInfo = {
        nickname: '微信用户',
        userId: 'wx_' + Date.now(),
        isVip: false,
        coins: 1000,
        rechargeOrders: 0,
        questionRecords: 0,
        creationRecords: 0
      }
      const currentTime = Date.now()
      uni.setStorageSync('token', 'mock_token_' + currentTime)
      uni.setStorageSync('userInfo', mockUserInfo)
      uni.setStorageSync('loginTime', currentTime)
      uni.showToast({ title: '登录成功', icon: 'success' })
      setTimeout(() => {
        uni.navigateBack()
      }, 1000)
    },
    goToPhoneLogin() {
      uni.navigateTo({ url: '/pages/login/phone-login' })
    }
  }
}
</script>

<style>
.login-container {
  flex: 1;
  background: #f8f8f8;
  min-height: 100vh;
}
.header {
  display: flex;
  align-items: center;
  padding: 20rpx 30rpx;
  border-bottom: 1rpx solid #f0f0f0;
  background: #fff;
}
.header-title {
  font-size: 32rpx;
  font-weight: 600;
  color: #000;
  margin: 0 auto;
}
.main-content {
  flex: 1;
  padding: 60rpx 40rpx;
  display: flex;
  flex-direction: column;
  align-items: center;
}
.app-info {
  display: flex;
  flex-direction: column;
  align-items: center;
  margin-bottom: 80rpx;
}
.app-icon {
  margin-bottom: 30rpx;
}
.icon-gradient {
  width: 120rpx;
  height: 120rpx;
  background: linear-gradient(135deg, #87CEEB 0%, #98FB98 100%);
  border-radius: 20rpx;
  display: flex;
  align-items: center;
  justify-content: center;
  position: relative;
}
.robot-head {
  font-size: 60rpx;
}
.lightbulb {
  position: absolute;
  top: -10rpx;
  right: -10rpx;
  width: 30rpx;
  height: 30rpx;
  background-color: #FFA500;
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 16rpx;
  color: #fff;
  font-weight: bold;
}
.app-name {
  font-size: 36rpx;
  font-weight: 600;
  color: #000;
}
.features {
  display: flex;
  flex-direction: column;
  gap: 30rpx;
  margin-bottom: 80rpx;
}
.feature-item {
  display: flex;
  align-items: center;
  gap: 20rpx;
}
.feature-icon {
  font-size: 40rpx;
}
.feature-text {
  font-size: 28rpx;
  color: #333;
}
.login-btn {
  width: 100%;
  height: 100rpx;
  background: linear-gradient(90deg, #87CEEB 0%, #98FB98 100%);
  color: #fff;
  border: none;
  border-radius: 16rpx;
  font-size: 32rpx;
  font-weight: 500;
  display: flex;
  align-items: center;
  justify-content: center;
  box-shadow: 0 4rpx 12rpx rgba(0, 122, 255, 0.15);
  margin-bottom: 24rpx;
}
.phone-login-link {
  font-size: 24rpx;
  color: #007aff;
  margin-bottom: 24rpx;
  text-decoration: underline;
  cursor: pointer;
}
.tips {
  font-size: 24rpx;
  color: #bbb;
  margin-top: 12rpx;
  text-align: center;
}
</style> 