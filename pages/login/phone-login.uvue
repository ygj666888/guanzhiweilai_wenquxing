<template>
  <view class="login-container">
    <view class="header">
      <text class="header-title">手机号登录</text>
    </view>
    <view class="main-content">
      <view class="app-info">
        <view class="app-icon">
          <view class="icon-gradient">
            <text class="robot-head">🤖<view class="lightbulb">in</view></text>
          </view>
        </view>
        <text class="app-name">我的AI知识助手</text>
      </view>
      <view class="login-options">
        <view class="input-label">手机号</view>
        <input class="input-box" placeholder="请输入手机号" v-model="phone" />
        <view class="input-label">验证码</view>
        <input class="input-box" placeholder="请输入验证码" v-model="code" />
        <button class="login-btn" @click="phoneLogin">登录</button>
      </view>
      <view class="tips">未注册手机号验证后自动创建账号</view>
    </view>
  </view>
</template>

<script>
import auth from '@/utils/auth.js'

export default {
  data() {
    return {
      phone: '',
      code: ''
    }
  },
  methods: {
    // 手机号登录
    phoneLogin() {
      if (!this.phone.trim()) {
        uni.showToast({
          title: '请输入手机号',
          icon: 'none'
        })
        return
      }
      
      if (!this.code.trim()) {
        uni.showToast({
          title: '请输入验证码',
          icon: 'none'
        })
        return
      }
      
      // 模拟手机号登录
      const mockUserInfo = {
        nickname: '手机用户',
        userId: 'phone_' + Date.now(),
        isVip: false,
        coins: 1000,
        rechargeOrders: 0,
        questionRecords: 0,
        creationRecords: 0
      }
      
      // 使用全局登录状态管理工具设置登录数据
      auth.setLoginData(mockUserInfo)
      
      uni.showToast({ title: '登录成功', icon: 'success' })
      setTimeout(() => {
        uni.navigateBack()
      }, 1000)
    }
  }
}
</script>

<style>
.login-container {
  flex: 1;
  background: #f8f8f8;
  min-height: 100vh;
}
.header {
  display: flex;
  align-items: center;
  padding: 20rpx 30rpx;
  border-bottom: 1rpx solid #f0f0f0;
  background: #fff;
}
.header-title {
  font-size: 32rpx;
  font-weight: 600;
  color: #000;
  margin: 0 auto;
}
.main-content {
  flex: 1;
  padding: 60rpx 40rpx;
  display: flex;
  flex-direction: column;
  align-items: center;
}
.app-info {
  display: flex;
  flex-direction: column;
  align-items: center;
  margin-bottom: 80rpx;
}
.app-icon {
  margin-bottom: 30rpx;
}
.icon-gradient {
  width: 120rpx;
  height: 120rpx;
  background: linear-gradient(135deg, #87CEEB 0%, #98FB98 100%);
  border-radius: 20rpx;
  display: flex;
  align-items: center;
  justify-content: center;
  position: relative;
}
.robot-head {
  font-size: 60rpx;
}
.lightbulb {
  position: absolute;
  top: -10rpx;
  right: -10rpx;
  width: 30rpx;
  height: 30rpx;
  background-color: #FFA500;
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 16rpx;
  color: #fff;
  font-weight: bold;
}
.app-name {
  font-size: 36rpx;
  font-weight: 600;
  color: #000;
}
.login-options {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 30rpx;
  margin-bottom: 60rpx;
  width: 100%;
}
.input-label {
  font-size: 28rpx;
  color: #888;
  margin-bottom: 10rpx;
  align-self: flex-start;
}
.input-box {
  width: 100%;
  height: 100rpx;
  border: 1rpx solid #87CEEB;
  border-radius: 16rpx;
  padding: 0 20rpx;
  font-size: 28rpx;
  background: #fff;
}
.login-btn {
  width: 100%;
  height: 100rpx;
  background: linear-gradient(90deg, #87CEEB 0%, #98FB98 100%);
  color: #fff;
  border: none;
  border-radius: 16rpx;
  font-size: 32rpx;
  font-weight: 500;
  display: flex;
  align-items: center;
  justify-content: center;
  box-shadow: 0 4rpx 12rpx rgba(0, 122, 255, 0.15);
}
.tips {
  font-size: 24rpx;
  color: #bbb;
  margin-top: 12rpx;
  text-align: center;
}
</style> 