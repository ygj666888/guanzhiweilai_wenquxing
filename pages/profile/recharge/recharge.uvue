<template>
	<view class="recharge-container">
		<!-- 当前余额 -->
		<view class="balance-section">
			<text class="balance-title">当前余额</text>
			<view class="balance-amount">
				<text class="amount-number">{{currentBalance}}</text>
				<text class="amount-unit">硬币</text>
			</view>
		</view>
		<!-- 充值套餐 -->
		<view class="packages-section">
			<text class="section-title">选择充值套餐</text>
			<view class="packages-grid">
				<view 
					class="package-item" 
					:class="{ active: selectedPackage === index }"
					v-for="(pkg, index) in packages" 
					:key="index"
					@click="selectPackage(index)"
				>
					<view class="package-amount">
						<text class="amount">{{pkg.amount}}</text>
						<text class="unit">硬币</text>
					</view>
					<view class="package-price">
						<text class="price-symbol">¥</text>
						<text class="price-number">{{pkg.price}}</text>
					</view>
					<!-- 只保留第2个套餐有促销标签 -->
					<view class="package-tag" v-if="index === 1">推荐</view>
				</view>
			</view>
		</view>
		<!-- 自定义充值 -->
		<view class="custom-section">
			<text class="section-title">自定义充值</text>
			<view class="custom-input">
				<input 
					class="amount-input" 
					v-model="customAmount" 
					type="number" 
					placeholder="请输入充值金额（元）"
				/>
				<text class="input-tip">1元 = 100硬币</text>
			</view>
		</view>
		<!-- 支付方式 -->
		<view class="payment-section">
			<text class="section-title">支付方式</text>
			<view class="payment-list">
				<view 
					class="payment-item" 
					:class="{ active: selectedPayment === index }"
					v-for="(payment, index) in paymentMethods" 
					:key="index"
					@click="selectPayment(index)"
				>
					<text class="payment-name">{{payment.name}}</text>
				</view>
			</view>
		</view>
		<!-- 充值说明 -->
		<view class="notice-section">
			<text class="notice-title">充值说明</text>
			<view class="notice-list">
				<text class="notice-item">1元人民币 = 100创作硬币</text>
				<text class="notice-item">充值金额最低1元，最高10000元</text>
				<text class="notice-item">充值成功后硬币立即到账</text>
				<text class="notice-item">硬币可用于AI创作、提问等功能</text>
			</view>
		</view>
		<!-- 底部支付按钮 -->
		<view class="bottom-section">
			<view class="payment-summary">
				<text class="summary-text">支付金额：</text>
				<text class="summary-price">¥{{totalAmount}}</text>
			</view>
			<view class="coins-summary">
				<text class="summary-text">获得硬币：</text>
				<text class="summary-coins">{{totalCoins}}个</text>
			</view>
			<button class="pay-btn" @click="confirmRecharge">立即充值</button>
		</view>
	</view>
</template>

<script>
export default {
	data() {
		return {
			currentBalance: 5000,
			selectedPackage: 1,
			selectedPayment: 0,
			customAmount: '',
			packages: [
				{ amount: 1000, price: '10' },
				{ amount: 5000, price: '50' },
				{ amount: 10000, price: '100' },
				{ amount: 20000, price: '200' },
				{ amount: 50000, price: '500' },
				{ amount: 100000, price: '1000' }
			],
			paymentMethods: [
				{ name: '微信支付' },
				{ name: '支付宝' }
			]
		}
	},
	computed: {
		totalAmount() {
			if (this.customAmount && this.customAmount > 0) {
				return parseFloat(this.customAmount).toFixed(2)
			}
			return this.packages[this.selectedPackage].price
		},
		totalCoins() {
			if (this.customAmount && this.customAmount > 0) {
				return Math.floor(parseFloat(this.customAmount) * 100)
			}
			return this.packages[this.selectedPackage].amount
		}
	},
	methods: {
		selectPackage(index) {
			this.selectedPackage = index
			this.customAmount = ''
		},
		selectPayment(index) {
			this.selectedPayment = index
		},
		confirmRecharge() {
			const payment = this.paymentMethods[this.selectedPayment]
			uni.showModal({
				title: '确认充值',
				content: `确认使用${payment.name}充值 ¥${this.totalAmount}，获得${this.totalCoins}个硬币？`,
				success: (res) => {
					if (res.confirm) {
						this.processRecharge()
					}
				}
			})
		},
		processRecharge() {
			uni.showLoading({ title: '充值中...' })
			setTimeout(() => {
				uni.hideLoading()
				uni.showToast({ title: '充值成功', icon: 'success' })
				this.currentBalance += this.totalCoins
				setTimeout(() => { uni.navigateBack() }, 1500)
			}, 2000)
		}
	}
}
</script>

<style>
.recharge-container {
	flex: 1;
	background: #fff;
	padding: 24rpx;
}
.balance-section, .packages-section, .custom-section, .payment-section, .notice-section {
	background: #fff;
	border: 1rpx solid #e0e0e0;
	border-radius: 6rpx;
	padding: 24rpx;
	margin-bottom: 20rpx;
	box-shadow: none;
}
.balance-title {
	font-size: 24rpx;
	color: #888;
	margin-bottom: 10rpx;
	display: block;
}
.balance-amount {
	display: flex;
	align-items: baseline;
	justify-content: center;
	gap: 6rpx;
}
.amount-number {
	font-size: 32rpx;
	font-weight: 500;
	color: #222;
}
.amount-unit {
	font-size: 20rpx;
	color: #888;
}
.section-title {
	font-size: 22rpx;
	font-weight: 500;
	color: #222;
	margin-bottom: 12rpx;
	display: block;
}
.packages-grid {
	display: grid;
	grid-template-columns: 1fr 1fr;
	gap: 12rpx;
}
.package-item {
	border: 1rpx solid #e0e0e0;
	border-radius: 6rpx;
	padding: 18rpx;
	text-align: center;
	background: #fff;
	transition: none;
	position: relative;
}
.package-item.active {
	border-color: #222;
	background: #f5f5f5;
}
.package-amount {
	margin-bottom: 8rpx;
}
.amount {
	font-size: 22rpx;
	font-weight: 500;
	color: #222;
}
.unit {
	font-size: 16rpx;
	color: #888;
}
.package-price {
	display: flex;
	align-items: baseline;
	justify-content: center;
	gap: 2rpx;
	margin-bottom: 4rpx;
}
.price-symbol {
	font-size: 16rpx;
	color: #222;
}
.price-number {
	font-size: 22rpx;
	font-weight: 500;
	color: #222;
}
.package-tag {
	position: absolute;
	top: 8rpx;
	right: 8rpx;
	background: #222;
	color: #fff;
	padding: 2rpx 10rpx;
	border-radius: 4rpx;
	font-size: 16rpx;
	font-weight: 400;
}
.custom-input {
	display: flex;
	flex-direction: column;
	gap: 6rpx;
}
.amount-input {
	width: 100%;
	height: 48rpx;
	border: 1rpx solid #e0e0e0;
	border-radius: 6rpx;
	padding: 0 12rpx;
	font-size: 18rpx;
	background: #fff;
}
.input-tip {
	font-size: 14rpx;
	color: #bbb;
}
.payment-list {
	display: flex;
	flex-direction: column;
	gap: 8rpx;
}
.payment-item {
	display: flex;
	align-items: center;
	padding: 12rpx;
	border: 1rpx solid #e0e0e0;
	border-radius: 6rpx;
	background: #fff;
	transition: none;
	cursor: pointer;
}
.payment-item.active {
	border-color: #222;
	background: #f5f5f5;
}
.payment-name {
	font-size: 18rpx;
	color: #222;
	flex: 1;
}
.notice-title {
	font-size: 18rpx;
	font-weight: 500;
	color: #222;
	margin-bottom: 8rpx;
	display: block;
}
.notice-list {
	display: flex;
	flex-direction: column;
	gap: 4rpx;
}
.notice-item {
	font-size: 14rpx;
	color: #888;
}
.bottom-section {
	position: fixed;
	bottom: 0;
	left: 0;
	right: 0;
	background: #fff;
	padding: 16rpx 24rpx;
	border-top: 1rpx solid #e0e0e0;
	display: flex;
	flex-direction: column;
	gap: 8rpx;
	box-shadow: none;
	z-index: 1000;
}
.payment-summary, .coins-summary {
	display: flex;
	align-items: center;
	justify-content: space-between;
}
.summary-text {
	font-size: 16rpx;
	color: #222;
}
.summary-price, .summary-coins {
	font-size: 20rpx;
	font-weight: 500;
	color: #222;
}
.pay-btn {
	background: #222;
	color: #fff;
	border: none;
	border-radius: 6rpx;
	padding: 10rpx 0;
	font-size: 18rpx;
	font-weight: 500;
	box-shadow: none;
	transition: none;
}
</style> 