<template>
	<view class="recharge-container">
		<!-- 当前余额 -->
		<view class="balance-section">
			<text class="balance-title">当前余额</text>
			<view class="balance-amount">
				<text class="amount-number">{{currentBalance}}</text>
				<text class="amount-unit">硬币</text>
			</view>
		</view>
		
		<!-- 充值套餐 -->
		<view class="packages-section">
			<text class="section-title">选择充值套餐</text>
			
			<view class="packages-grid">
				<view 
					class="package-item" 
					:class="{ active: selectedPackage === index }"
					v-for="(pkg, index) in packages" 
					:key="index"
					@click="selectPackage(index)"
				>
					<view class="package-amount">
						<text class="amount">{{pkg.amount}}</text>
						<text class="unit">硬币</text>
					</view>
					<view class="package-price">
						<text class="price-symbol">¥</text>
						<text class="price-number">{{pkg.price}}</text>
					</view>
					<view class="package-bonus" v-if="pkg.bonus">
						<text class="bonus-text">送{{pkg.bonus}}硬币</text>
					</view>
					<view class="package-tag" v-if="pkg.tag">{{pkg.tag}}</view>
				</view>
			</view>
		</view>
		
		<!-- 自定义充值 -->
		<view class="custom-section">
			<text class="section-title">自定义充值</text>
			<view class="custom-input">
				<input 
					class="amount-input" 
					v-model="customAmount" 
					type="number" 
					placeholder="请输入充值金额（元）"
				/>
				<text class="input-tip">1元 = 100硬币</text>
			</view>
		</view>
		
		<!-- 支付方式 -->
		<view class="payment-section">
			<text class="section-title">支付方式</text>
			
			<view class="payment-list">
				<view 
					class="payment-item" 
					:class="{ active: selectedPayment === index }"
					v-for="(payment, index) in paymentMethods" 
					:key="index"
					@click="selectPayment(index)"
				>
					<view class="payment-icon">{{payment.icon}}</view>
					<text class="payment-name">{{payment.name}}</text>
					<view class="payment-check" v-if="selectedPayment === index">✓</view>
				</view>
			</view>
		</view>
		
		<!-- 充值说明 -->
		<view class="notice-section">
			<text class="notice-title">充值说明</text>
			<view class="notice-list">
				<text class="notice-item">• 1元人民币 = 100创作硬币</text>
				<text class="notice-item">• 充值金额最低1元，最高10000元</text>
				<text class="notice-item">• 充值成功后硬币立即到账</text>
				<text class="notice-item">• 硬币可用于AI创作、提问等功能</text>
			</view>
		</view>
		
		<!-- 底部支付按钮 -->
		<view class="bottom-section">
			<view class="payment-summary">
				<text class="summary-text">支付金额：</text>
				<text class="summary-price">¥{{totalAmount}}</text>
			</view>
			<view class="coins-summary">
				<text class="summary-text">获得硬币：</text>
				<text class="summary-coins">{{totalCoins}}个</text>
			</view>
			<button class="pay-btn" @click="confirmRecharge">立即充值</button>
		</view>
	</view>
</template>

<script>
export default {
	data() {
		return {
			currentBalance: 5000,
			selectedPackage: 1,
			selectedPayment: 0,
			customAmount: '',
			packages: [
				{
					amount: 1000,
					price: '10',
					bonus: 0,
					tag: ''
				},
				{
					amount: 5000,
					price: '50',
					bonus: 500,
					tag: '推荐'
				},
				{
					amount: 10000,
					price: '100',
					bonus: 1500,
					tag: '超值'
				},
				{
					amount: 20000,
					price: '200',
					bonus: 4000,
					tag: '特惠'
				},
				{
					amount: 50000,
					price: '500',
					bonus: 12000,
					tag: '最优惠'
				},
				{
					amount: 100000,
					price: '1000',
					bonus: 30000,
					tag: '土豪'
				}
			],
			paymentMethods: [
				{ name: '微信支付', icon: '💳' },
				{ name: '支付宝', icon: '💰' }
			]
		}
	},
	computed: {
		totalAmount() {
			if (this.customAmount && this.customAmount > 0) {
				return parseFloat(this.customAmount).toFixed(2)
			}
			return this.packages[this.selectedPackage].price
		},
		totalCoins() {
			if (this.customAmount && this.customAmount > 0) {
				return Math.floor(parseFloat(this.customAmount) * 100)
			}
			const pkg = this.packages[this.selectedPackage]
			return pkg.amount + pkg.bonus
		}
	},
	methods: {
		selectPackage(index) {
			this.selectedPackage = index
			this.customAmount = '' // 清空自定义金额
		},
		
		selectPayment(index) {
			this.selectedPayment = index
		},
		
		confirmRecharge() {
			const payment = this.paymentMethods[this.selectedPayment]
			
			uni.showModal({
				title: '确认充值',
				content: `确认使用${payment.name}充值 ¥${this.totalAmount}，获得${this.totalCoins}个硬币？`,
				success: (res) => {
					if (res.confirm) {
						this.processRecharge()
					}
				}
			})
		},
		
		processRecharge() {
			uni.showLoading({
				title: '充值中...'
			})
			
			setTimeout(() => {
				uni.hideLoading()
				uni.showToast({
					title: '充值成功',
					icon: 'success'
				})
				
				// 更新余额
				this.currentBalance += this.totalCoins
				
				setTimeout(() => {
					uni.navigateBack()
				}, 1500)
			}, 2000)
		}
	}
}
</script>

<style>
.recharge-container {
	flex: 1;
	background-color: #f8f8f8;
	padding: 30rpx;
}

.balance-section {
	background-color: #ffffff;
	border-radius: 16rpx;
	padding: 40rpx;
	margin-bottom: 30rpx;
	text-align: center;
}

.balance-title {
	font-size: 28rpx;
	color: #666666;
	margin-bottom: 20rpx;
	display: block;
}

.balance-amount {
	display: flex;
	align-items: baseline;
	justify-content: center;
	gap: 10rpx;
}

.amount-number {
	font-size: 48rpx;
	font-weight: 600;
	color: #007aff;
}

.amount-unit {
	font-size: 28rpx;
	color: #666666;
}

.packages-section {
	background-color: #ffffff;
	border-radius: 16rpx;
	padding: 40rpx;
	margin-bottom: 30rpx;
}

.section-title {
	font-size: 32rpx;
	font-weight: 600;
	color: #000000;
	margin-bottom: 30rpx;
	display: block;
}

.packages-grid {
	display: grid;
	grid-template-columns: 1fr 1fr;
	gap: 20rpx;
}

.package-item {
	border: 2rpx solid #e0e0e0;
	border-radius: 12rpx;
	padding: 30rpx;
	text-align: center;
	position: relative;
	transition: all 0.3s;
}

.package-item.active {
	border-color: #007aff;
	background-color: #f0f8ff;
}

.package-amount {
	margin-bottom: 15rpx;
}

.amount {
	font-size: 36rpx;
	font-weight: 600;
	color: #000000;
}

.unit {
	font-size: 24rpx;
	color: #666666;
}

.package-price {
	display: flex;
	align-items: baseline;
	justify-content: center;
	gap: 5rpx;
	margin-bottom: 10rpx;
}

.price-symbol {
	font-size: 24rpx;
	color: #ff3b30;
}

.price-number {
	font-size: 32rpx;
	font-weight: 600;
	color: #ff3b30;
}

.package-bonus {
	margin-bottom: 10rpx;
}

.bonus-text {
	font-size: 22rpx;
	color: #00c851;
	background-color: #f0fff0;
	padding: 4rpx 8rpx;
	border-radius: 4rpx;
}

.package-tag {
	position: absolute;
	top: -10rpx;
	right: -10rpx;
	background-color: #ff3b30;
	color: #ffffff;
	padding: 6rpx 12rpx;
	border-radius: 6rpx;
	font-size: 20rpx;
}

.custom-section {
	background-color: #ffffff;
	border-radius: 16rpx;
	padding: 40rpx;
	margin-bottom: 30rpx;
}

.custom-input {
	display: flex;
	flex-direction: column;
	gap: 10rpx;
}

.amount-input {
	width: 100%;
	height: 80rpx;
	border: 1rpx solid #e0e0e0;
	border-radius: 8rpx;
	padding: 0 20rpx;
	font-size: 28rpx;
	background-color: #ffffff;
}

.input-tip {
	font-size: 24rpx;
	color: #999999;
}

.payment-section {
	background-color: #ffffff;
	border-radius: 16rpx;
	padding: 40rpx;
	margin-bottom: 30rpx;
}

.payment-list {
	display: flex;
	flex-direction: column;
	gap: 20rpx;
}

.payment-item {
	display: flex;
	align-items: center;
	padding: 30rpx;
	border: 2rpx solid #e0e0e0;
	border-radius: 12rpx;
	position: relative;
}

.payment-item.active {
	border-color: #007aff;
	background-color: #f0f8ff;
}

.payment-icon {
	font-size: 40rpx;
	margin-right: 20rpx;
}

.payment-name {
	font-size: 28rpx;
	color: #000000;
	flex: 1;
}

.payment-check {
	width: 40rpx;
	height: 40rpx;
	background-color: #007aff;
	color: #ffffff;
	border-radius: 50%;
	display: flex;
	align-items: center;
	justify-content: center;
	font-size: 24rpx;
	font-weight: 600;
}

.notice-section {
	background-color: #ffffff;
	border-radius: 16rpx;
	padding: 40rpx;
	margin-bottom: 30rpx;
}

.notice-title {
	font-size: 28rpx;
	font-weight: 600;
	color: #000000;
	margin-bottom: 20rpx;
	display: block;
}

.notice-list {
	display: flex;
	flex-direction: column;
	gap: 10rpx;
}

.notice-item {
	font-size: 24rpx;
	color: #666666;
}

.bottom-section {
	position: fixed;
	bottom: 0;
	left: 0;
	right: 0;
	background-color: #ffffff;
	padding: 30rpx;
	border-top: 1rpx solid #e0e0e0;
	display: flex;
	flex-direction: column;
	gap: 15rpx;
}

.payment-summary, .coins-summary {
	display: flex;
	align-items: center;
	justify-content: space-between;
}

.summary-text {
	font-size: 28rpx;
	color: #000000;
}

.summary-price {
	font-size: 32rpx;
	font-weight: 600;
	color: #ff3b30;
}

.summary-coins {
	font-size: 32rpx;
	font-weight: 600;
	color: #007aff;
}

.pay-btn {
	background: linear-gradient(90deg, #007aff 0%, #00c851 100%);
	color: #ffffff;
	border: none;
	border-radius: 12rpx;
	padding: 25rpx;
	font-size: 30rpx;
	font-weight: 500;
}
</style> 