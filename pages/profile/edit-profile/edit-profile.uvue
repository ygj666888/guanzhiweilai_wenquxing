<template>
	<view class="edit-profile-container">
		<view class="form-section">
			<view class="form-item">
				<text class="form-label">头像</text>
				<view class="avatar-section" @click="chooseAvatar">
					<view class="avatar" v-if="!userInfo.avatar">
						<text class="avatar-text">{{userInfo.nickname.charAt(0)}}</text>
					</view>
					<image class="avatar-image" v-else :src="userInfo.avatar" mode="aspectFill" />
					<text class="avatar-tip">点击更换头像</text>
				</view>
			</view>
			
			<view class="form-item">
				<text class="form-label">昵称</text>
				<input class="form-input" v-model="userInfo.nickname" placeholder="请输入或选择微信昵称" />
			</view>
			
			<view class="form-item">
				<text class="form-label">用户ID</text>
				<view class="userid-section">
					<text class="userid-text">{{userInfo.userId}}</text>
					<view class="copy-btn" @click="copyUserId">
						<text class="copy-icon">📋</text>
					</view>
				</view>
			</view>
			
			<view class="form-item">
				<text class="form-label">绑定手机号</text>
				<view class="phone-section" @click="goToBindPhone">
					<text class="phone-status" :class="{ bound: userInfo.phoneBound }">
						{{userInfo.phoneBound ? '已绑定' : '绑定成功送5000硬币'}}
					</text>
					<text class="phone-arrow">></text>
				</view>
			</view>
			
			<view class="form-item">
				<text class="form-label">性别</text>
				<picker class="form-picker" :value="genderIndex" :range="genderOptions" @change="onGenderChange">
					<text class="picker-text">{{genderOptions[genderIndex]}}</text>
				</picker>
			</view>
			
			<view class="form-item">
				<text class="form-label">生日</text>
				<picker class="form-picker" mode="date" :value="userInfo.birthday" @change="onBirthdayChange">
					<text class="picker-text">{{userInfo.birthday || '请选择生日'}}</text>
				</picker>
			</view>
			
			<view class="form-item">
				<text class="form-label">个人简介</text>
				<textarea class="form-textarea" v-model="userInfo.bio" placeholder="请输入个人简介" maxlength="200" />
				<text class="char-count">{{userInfo.bio.length}}/200</text>
			</view>
		</view>
		
		<view class="button-section">
			<button class="save-btn" @click="saveProfile">保存</button>
		</view>
	</view>
</template>

<script>
export default {
	data() {
		return {
			userInfo: {
				nickname: 'inner2466',
				userId: '1933438229252542466',
				avatar: '',
				phoneBound: false,
				gender: '男',
				birthday: '',
				bio: ''
			},
			genderOptions: ['男', '女', '保密'],
			genderIndex: 0
		}
	},
	onLoad() {
		this.loadUserData()
	},
	
	onShow() {
		// 每次显示页面时重新加载数据，确保显示最新信息
		this.loadUserData()
	},
	
	loadUserData() {
		// 从本地存储加载用户信息
		const savedUserInfo = uni.getStorageSync('userInfo')
		if (savedUserInfo) {
			this.userInfo = { ...this.userInfo, ...savedUserInfo }
		}
		
		// 从本地存储加载头像
		const savedAvatar = uni.getStorageSync('userAvatar')
		if (savedAvatar) {
			this.userInfo.avatar = savedAvatar
		}
		
		// 检查手机绑定状态
		const phoneBound = uni.getStorageSync('phoneBound')
		if (phoneBound) {
			this.userInfo.phoneBound = true
			// 确保用户信息中也包含手机绑定状态
			if (!this.userInfo.phoneBound) {
				this.userInfo.phoneBound = true
				uni.setStorageSync('userInfo', this.userInfo)
			}
		}
		
		// 设置性别索引
		this.genderIndex = this.genderOptions.indexOf(this.userInfo.gender)
		if (this.genderIndex === -1) this.genderIndex = 0
	},
	methods: {
		chooseAvatar() {
			uni.chooseImage({
				count: 1,
				sizeType: ['compressed'],
				sourceType: ['album', 'camera'],
				success: (res) => {
					this.userInfo.avatar = res.tempFilePaths[0]
					// 保存到本地存储
					uni.setStorageSync('userAvatar', res.tempFilePaths[0])
					uni.showToast({
						title: '头像已选择',
						icon: 'success'
					})
				}
			})
		},
		
		onGenderChange(e) {
			this.genderIndex = e.detail.value
			this.userInfo.gender = this.genderOptions[this.genderIndex]
		},
		
		onBirthdayChange(e) {
			this.userInfo.birthday = e.detail.value
		},
		
		copyUserId() {
			uni.setClipboardData({
				data: this.userInfo.userId,
				success: () => {
					uni.showToast({
						title: '用户ID已复制',
						icon: 'success'
					})
				}
			})
		},
		
		goToBindPhone() {
			uni.navigateTo({
				url: '/pages/profile/bind-phone/bind-phone'
			})
		},
		
		saveProfile() {
			uni.showLoading({
				title: '保存中...'
			})
			
			// 保存用户信息到本地存储
			uni.setStorageSync('userInfo', this.userInfo)
			
			setTimeout(() => {
				uni.hideLoading()
				uni.showToast({
					title: '保存成功',
					icon: 'success'
				})
				
				setTimeout(() => {
					uni.navigateBack()
				}, 1500)
			}, 1000)
		}
	}
}
</script>

<style>
.edit-profile-container {
	flex: 1;
	background-color: #f8f8f8;
	padding: 30rpx;
}

.form-section {
	background-color: #ffffff;
	border-radius: 16rpx;
	padding: 30rpx;
	margin-bottom: 40rpx;
}

.form-item {
	margin-bottom: 40rpx;
}

.form-item:last-child {
	margin-bottom: 0;
}

.form-label {
	font-size: 28rpx;
	color: #000000;
	margin-bottom: 20rpx;
	display: block;
}

.form-input {
	width: 100%;
	height: 80rpx;
	border: 1rpx solid #e0e0e0;
	border-radius: 8rpx;
	padding: 0 20rpx;
	font-size: 28rpx;
	background-color: #ffffff;
}

.avatar-section {
	display: flex;
	align-items: center;
	gap: 30rpx;
}

.avatar {
	width: 120rpx;
	height: 120rpx;
	background-color: #007aff;
	border-radius: 50%;
	display: flex;
	align-items: center;
	justify-content: center;
}

.avatar-text {
	font-size: 48rpx;
	font-weight: 600;
	color: #ffffff;
}

.avatar-tip {
	font-size: 26rpx;
	color: #666666;
}

.avatar-image {
	width: 120rpx;
	height: 120rpx;
	border-radius: 50%;
}

.userid-section {
	display: flex;
	justify-content: space-between;
	align-items: center;
	padding: 20rpx;
	border: 1rpx solid #e0e0e0;
	border-radius: 8rpx;
	background-color: #f8f8f8;
}

.userid-text {
	font-size: 28rpx;
	color: #666666;
}

.copy-btn {
	width: 60rpx;
	height: 60rpx;
	display: flex;
	align-items: center;
	justify-content: center;
}

.copy-icon {
	font-size: 32rpx;
}

.phone-section {
	display: flex;
	justify-content: space-between;
	align-items: center;
	padding: 20rpx;
	border: 1rpx solid #e0e0e0;
	border-radius: 8rpx;
	background-color: #ffffff;
}

.phone-status {
	font-size: 28rpx;
	color: #ff3b30;
}

.phone-status.bound {
	color: #00c851;
}

.phone-arrow {
	font-size: 28rpx;
	color: #999999;
}

.form-picker {
	width: 100%;
	height: 80rpx;
	border: 1rpx solid #e0e0e0;
	border-radius: 8rpx;
	padding: 0 20rpx;
	background-color: #ffffff;
	display: flex;
	align-items: center;
}

.picker-text {
	font-size: 28rpx;
	color: #000000;
}

.form-textarea {
	width: 100%;
	height: 200rpx;
	border: 1rpx solid #e0e0e0;
	border-radius: 8rpx;
	padding: 20rpx;
	font-size: 28rpx;
	background-color: #ffffff;
}

.char-count {
	font-size: 24rpx;
	color: #999999;
	text-align: right;
	margin-top: 10rpx;
	display: block;
}

.button-section {
	padding: 30rpx 0;
}

.save-btn {
	width: 100%;
	height: 100rpx;
	background: linear-gradient(90deg, #007aff 0%, #00c851 100%);
	color: #ffffff;
	border: none;
	border-radius: 16rpx;
	font-size: 32rpx;
	font-weight: 500;
	display: flex;
	align-items: center;
	justify-content: center;
}
</style> 